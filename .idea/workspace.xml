<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="3b882bbf-1e76-42d4-82e0-98af52c558fe" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/gaussian_process/GP_signature.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/gaussian_process/gaussian_process_regression.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/neural-network/VGG19.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/neural-network/VGG_inspired_34.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/neural-network/cnn_AlexNet.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/neural-network/cnn_lenet5.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/neural-network/cnn_lenet5_with_dropout.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/pattern-recognition-basic.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/pattern-recognition-basic.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/linear-classifier/data_distribution_figure.png" beforeDir="false" afterPath="$PROJECT_DIR$/linear-classifier/data_distribution_figure.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/linear-classifier/test_data.npy" beforeDir="false" afterPath="$PROJECT_DIR$/linear-classifier/test_data.npy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/linear-classifier/test_data_label.npy" beforeDir="false" afterPath="$PROJECT_DIR$/linear-classifier/test_data_label.npy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/linear-classifier/train_data.npy" beforeDir="false" afterPath="$PROJECT_DIR$/linear-classifier/train_data.npy" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/linear-classifier/train_data_label.npy" beforeDir="false" afterPath="$PROJECT_DIR$/linear-classifier/train_data_label.npy" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/neural-network/cnn_lenet5.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="663">
              <caret line="75" column="6" selection-start-line="75" selection-start-column="6" selection-end-line="75" selection-end-column="6" />
              <folding>
                <element signature="e#0#23#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/neural-network/cnn_lenet5_with_dropout.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="212">
              <caret line="54" selection-start-line="54" selection-end-line="54" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/neural-network/cnn_AlexNet.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-269">
              <caret line="20" column="7" selection-start-line="20" selection-end-line="20" selection-end-column="7" />
              <folding>
                <element signature="e#0#23#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/neural-network/VGG19.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="272">
              <caret line="16" column="88" lean-forward="true" selection-start-line="16" selection-start-column="88" selection-end-line="16" selection-end-column="88" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/neural-network/VGG_inspired_34.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="288">
              <caret line="67" column="22" lean-forward="true" selection-start-line="67" selection-start-column="22" selection-end-line="67" selection-end-column="22" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/tensorflow/python/keras/layers/pooling.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="206">
              <caret line="351" column="6" selection-start-line="351" selection-start-column="6" selection-end-line="351" selection-end-column="6" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/tensorflow/python/keras/layers/convolutional.py">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="140">
              <caret line="438" column="6" selection-start-line="438" selection-start-column="6" selection-end-line="438" selection-end-column="6" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>dnn</find>
      <find>session</find>
      <find>loss</find>
      <find>dense</find>
      <find>kernel</find>
      <find>gsr_list_for_each_hypo</find>
      <find>theta</find>
      <find>generateValues</find>
      <find>drop</find>
    </findStrings>
    <dirStrings>
      <dir>E:\Workstation\pattern-recognition-basic\pattern-recognition-basic\xml-parser</dir>
    </dirStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/Assignment 2/MinibatchGradientDecentTensorflow.py" />
        <option value="$PROJECT_DIR$/Neural Network/neural_network_4_hidden_layer.py" />
        <option value="$PROJECT_DIR$/Neural Network/basic_neural_network.py" />
        <option value="$PROJECT_DIR$/Neural Network/neural_nets_with_large_value.py" />
        <option value="$PROJECT_DIR$/Neural Network/data_modifier.py" />
        <option value="$PROJECT_DIR$/Neural Network/NN_2_hidden_layer.py" />
        <option value="$PROJECT_DIR$/Neural Network/NN_large_input_val.py" />
        <option value="$PROJECT_DIR$/Neural Network/NN_with_He_initialization.py" />
        <option value="$PROJECT_DIR$/Neural Network/NN_with_elu_activation.py" />
        <option value="$PROJECT_DIR$/Neural Network/NN_with_normalization.py" />
        <option value="$PROJECT_DIR$/Neural Network/NN_4_hidden_layer.py" />
        <option value="$PROJECT_DIR$/gaussian_process/gaussian_process_regression.py" />
        <option value="$PROJECT_DIR$/gaussian_process/GP_signature.py" />
        <option value="$PROJECT_DIR$/Adversarial_example/Adversarial_example_gen.py" />
        <option value="$PROJECT_DIR$/xml-parser/utils.py" />
        <option value="$PROJECT_DIR$/xml-parser/xml_parser" />
        <option value="$PROJECT_DIR$/deep-learning-assignment/rotation_bi_variate.py" />
        <option value="$PROJECT_DIR$/deep-learning-assignment/plotGauss.py" />
        <option value="$PROJECT_DIR$/deep-learning-assignment/rotation_of_bivariate_gaussian.py" />
        <option value="$PROJECT_DIR$/neural-network/cnn.py" />
        <option value="$PROJECT_DIR$/neural-network/cnn_lenet5_with_dropout.py" />
        <option value="$PROJECT_DIR$/neural-network/cnn_lenet5.py" />
        <option value="$PROJECT_DIR$/neural-network/cnn_AlexNet.py" />
        <option value="$PROJECT_DIR$/neural-network/VGG_inspired_34.py" />
        <option value="$PROJECT_DIR$/neural-network/VGG19.py" />
        <option value="$PROJECT_DIR$/neural-network/temp.py" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="-8" />
    <option name="y" value="48" />
    <option name="width" value="1400" />
    <option name="height" value="970" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="pattern-recognition-basic" type="b2602c69:ProjectViewProjectNode" />
              <item name="pattern-recognition-basic" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="pattern-recognition-basic" type="b2602c69:ProjectViewProjectNode" />
              <item name="pattern-recognition-basic" type="462c0819:PsiDirectoryNode" />
              <item name="neural-network" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="Scope" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File" value="Python" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/neural-network/VGG19.py" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\Workstation\pattern-recognition-basic\pattern-recognition-basic\neural-network" />
      <recent name="C:\Others\Workstation\pattern-recognition-basic\Neural Network" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.VGG19">
    <configuration name="GP_signature" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda2\envs\pattern-recognition-basic\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/gaussian_process" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/gaussian_process/GP_signature.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="NN_2_hidden_layer" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda3\envs\pattern-recognition\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Neural Network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Neural Network/NN_2_hidden_layer.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="NN_4_hidden_layer" type="PythonConfigurationType" factoryName="Python">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/neural-network" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="E:\Workstation\pattern-recognition-basic\pattern-recognition-basic\neural-network\cnn_lenet5.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="NN_large_input_val" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda3\envs\pattern-recognition\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Neural Network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="C:\Others\Workstation\pattern-recognition-basic\Neural Network\NN_large_input_val.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="NN_with_He_initialization" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda3\envs\pattern-recognition\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Neural Network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Neural Network/NN_with_He_initialization.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="NN_with_elu_activation" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda3\envs\pattern-recognition\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Neural Network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Neural Network/NN_with_elu_activation.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="NN_with_normalization" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda3\envs\pattern-recognition\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Neural Network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Neural Network/NN_with_normalization.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Temporary" type="PythonConfigurationType" factoryName="Python">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda2\envs\pattern-recognition-basic\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/neural-network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/neural-network/temp.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="VGG19" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda2\envs\pattern-recognition-basic\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/neural-network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/neural-network/VGG19.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="VGG_inspired_34" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda2\envs\pattern-recognition-basic\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/neural-network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/neural-network/VGG_inspired_34.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="data_modifier" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pattern-recognition-basic" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="C:\Users\Rabby\Miniconda3\envs\pattern-recognition\python.exe" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Neural Network" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Neural Network/data_modifier.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.NN_2_hidden_layer" />
      <item itemvalue="Python.GP_signature" />
      <item itemvalue="Python.Temporary" />
      <item itemvalue="Python.VGG_inspired_34" />
      <item itemvalue="Python.VGG19" />
      <item itemvalue="Python.NN_4_hidden_layer" />
      <item itemvalue="Python.NN_large_input_val" />
      <item itemvalue="Python.NN_with_He_initialization" />
      <item itemvalue="Python.NN_with_elu_activation" />
      <item itemvalue="Python.NN_with_normalization" />
      <item itemvalue="Python.data_modifier" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3b882bbf-1e76-42d4-82e0-98af52c558fe" name="Default Changelist" comment="" />
      <created>1556430890502</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1556430890502</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="-8" y="-8" width="1696" height="1026" extended-state="7" />
    <editor active="true" />
    <layout>
      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.19903499" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" visible="true" weight="0.35722286" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.28710726" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Version Control" order="7" weight="0.32936078" />
      <window_info anchor="bottom" id="Terminal" order="8" weight="0.32936078" />
      <window_info anchor="bottom" id="Event Log" order="9" side_tool="true" />
      <window_info anchor="bottom" id="Python Console" order="10" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
    </layout>
    <layout-to-restore>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.13510254" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.26539755" />
      <window_info active="true" anchor="bottom" id="Debug" order="3" visible="true" weight="0.3012318" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Version Control" order="7" />
      <window_info anchor="bottom" id="Terminal" order="8" />
      <window_info anchor="bottom" id="Event Log" order="9" side_tool="true" />
      <window_info anchor="bottom" id="Python Console" order="10" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
    </layout-to-restore>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_2_hidden_layer.py</url>
          <line>105</line>
          <option name="timeStamp" value="4" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_4_hidden_layer.py</url>
          <line>11</line>
          <option name="timeStamp" value="16" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_4_hidden_layer.py</url>
          <line>71</line>
          <option name="timeStamp" value="23" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/data_modifier.py</url>
          <line>22</line>
          <option name="timeStamp" value="27" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/data_modifier.py</url>
          <line>17</line>
          <option name="timeStamp" value="28" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_large_input_val.py</url>
          <line>89</line>
          <option name="timeStamp" value="29" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_large_input_val.py</url>
          <line>17</line>
          <option name="timeStamp" value="31" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_large_input_val.py</url>
          <line>105</line>
          <option name="timeStamp" value="33" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_with_He_initialization.py</url>
          <line>54</line>
          <option name="timeStamp" value="34" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_with_He_initialization.py</url>
          <line>10</line>
          <option name="timeStamp" value="35" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_2_hidden_layer.py</url>
          <line>100</line>
          <option name="timeStamp" value="37" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_2_hidden_layer.py</url>
          <line>123</line>
          <option name="timeStamp" value="39" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_2_hidden_layer.py</url>
          <line>91</line>
          <option name="timeStamp" value="41" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_with_normalization.py</url>
          <line>141</line>
          <option name="timeStamp" value="42" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_with_elu_activation.py</url>
          <line>95</line>
          <option name="timeStamp" value="44" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_with_elu_activation.py</url>
          <line>85</line>
          <option name="timeStamp" value="45" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/Neural Network/NN_with_normalization.py</url>
          <line>134</line>
          <option name="timeStamp" value="46" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/gaussian_process/gaussian_process_regression.py</url>
          <line>36</line>
          <option name="timeStamp" value="48" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/gaussian_process/gaussian_process_regression.py</url>
          <line>85</line>
          <option name="timeStamp" value="49" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/gaussian_process/GP_signature.py</url>
          <line>54</line>
          <option name="timeStamp" value="57" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/gaussian_process/GP_signature.py</url>
          <line>50</line>
          <option name="timeStamp" value="58" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/xml-parser/xml_parser</url>
          <line>175</line>
          <option name="timeStamp" value="71" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/deep-learning-assignment/plotGauss.py</url>
          <line>46</line>
          <option name="timeStamp" value="73" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/deep-learning-assignment/plotGauss.py</url>
          <line>50</line>
          <option name="timeStamp" value="74" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/deep-learning-assignment/rotation_of_bivariate_gaussian.py</url>
          <line>77</line>
          <option name="timeStamp" value="84" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/deep-learning-assignment/rotation_of_bivariate_gaussian.py</url>
          <line>39</line>
          <option name="timeStamp" value="86" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/deep-learning-assignment/rotation_of_bivariate_gaussian.py</url>
          <line>70</line>
          <option name="timeStamp" value="87" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/deep-learning-assignment/rotation_of_bivariate_gaussian.py</url>
          <line>38</line>
          <option name="timeStamp" value="88" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/deep-learning-assignment/rotation_of_bivariate_gaussian.py</url>
          <line>84</line>
          <option name="timeStamp" value="90" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/deep-learning-assignment/rotation_of_bivariate_gaussian.py</url>
          <line>85</line>
          <option name="timeStamp" value="91" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/neural-network/NN_4_hidden_layer.py</url>
          <line>2</line>
          <option name="timeStamp" value="92" />
        </line-breakpoint>
        <line-breakpoint enabled="true" suspend="THREAD" type="python-line">
          <url>file://$PROJECT_DIR$/neural-network/VGG19.py</url>
          <option name="timeStamp" value="93" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>data_set.shape.__len__()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>data_set.shape.__len__(data_set.shape)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>data_set.shape.__len__</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>data_set.shape</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>data_set.shape.__le__()</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>data_set.__len__.len</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>data_set.__len__</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>data_set.shape.len</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/Neural Network/data_modifier.py" />
    <entry file="file://$PROJECT_DIR$/Neural Network/NN_4_hidden_layer.py" />
    <entry file="file://$PROJECT_DIR$/Neural Network/NN_2_hidden_layer.py" />
    <entry file="file://$PROJECT_DIR$/Neural Network/NN_with_He_initialization.py" />
    <entry file="file://$PROJECT_DIR$/Neural Network/NN_with_elu_activation.py" />
    <entry file="file://$PROJECT_DIR$/Neural Network/NN_with_normalization.py" />
    <entry file="file://$PROJECT_DIR$/Neural Network/NN_large_input_val.py" />
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/numpy/core/function_base.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="199">
          <caret line="24" column="4" selection-start-line="24" selection-start-column="4" selection-end-line="24" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/linear-classifier/BatchGradientDecentTensorflow.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="102">
          <caret line="6" column="31" selection-start-line="6" selection-start-column="31" selection-end-line="6" selection-end-column="31" />
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/perceptron/PerceptronForNormDistribution5000-5000.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="391">
          <caret line="23" selection-start-line="23" selection-end-line="23" />
          <folding>
            <element signature="e#390#401#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.PyCharmCE2018.3/system/python_stubs/571664604/numpy/random/mtrand.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="178">
          <caret line="1594" column="4" selection-start-line="1594" selection-start-column="4" selection-end-line="1594" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_HOME_DIR$/helpers/python-skeletons/numpy/core/__init__.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="206">
          <caret line="460" column="8" selection-start-line="460" selection-start-column="8" selection-end-line="460" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/sklearn/gaussian_process/kernels.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="454">
          <caret line="971" column="8" selection-start-line="971" selection-start-column="8" selection-end-line="971" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/gaussian_process/gaussian_process_regression.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="663">
          <caret line="43" column="51" selection-start-line="43" selection-start-column="51" selection-end-line="43" selection-end-column="51" />
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Adversarial_example/Adversarial_example_gen.py" />
    <entry file="file://$PROJECT_DIR$/gaussian_process/GP_signature.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="306">
          <caret line="18" column="19" lean-forward="true" selection-start-line="18" selection-start-column="19" selection-end-line="18" selection-end-column="19" />
          <folding>
            <element signature="e#0#10#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/urllib/__init__.py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/urllib/request.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="291">
          <caret line="168" column="4" selection-start-line="168" selection-start-column="4" selection-end-line="168" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/tempfile.py">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/matplotlib/pyplot.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="841">
          <caret line="2807" column="4" selection-start-line="2807" selection-start-column="4" selection-end-line="2807" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/neural-network/NN_with_elu_activation.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="841">
          <caret line="127" selection-start-line="127" selection-end-line="129" selection-end-column="42" />
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/sklearn/gaussian_process/gpr.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="841">
          <caret line="172" column="8" selection-start-line="172" selection-start-column="8" selection-end-line="172" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.PyCharmCE2018.3/system/python_stubs/571664604/builtins.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="841">
          <caret line="4972" column="8" selection-start-line="4972" selection-start-column="8" selection-end-line="4972" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/numpy/core/shape_base.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="841">
          <caret line="62" column="4" selection-start-line="62" selection-start-column="4" selection-end-line="62" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/linear-classifier/data_distribution_figure.png">
      <provider selected="true" editor-type-id="images" />
    </entry>
    <entry file="file://$APPLICATION_CONFIG_DIR$/scratches/scratch.py" />
    <entry file="file://$PROJECT_DIR$/linear-classifier/Perceptron-2.png">
      <provider selected="true" editor-type-id="images" />
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/datetime.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="24480">
          <caret line="1441" column="8" selection-start-line="1441" selection-start-column="8" selection-end-line="1441" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/codecs.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="5270">
          <caret line="310" selection-start-line="310" selection-end-line="310" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/linear-classifier/MinibatchGradientDecentTensorflow.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="841">
          <caret line="89" column="24" selection-start-line="89" selection-start-column="24" selection-end-line="89" selection-end-column="24" />
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/xml-parser/__init__.py" />
    <entry file="file://$PROJECT_DIR$/xml-parser/xml_parser" />
    <entry file="file://$PROJECT_DIR$/xml-parser/utils.py" />
    <entry file="file://$USER_HOME$/.PyCharmCE2018.3/system/python_stubs/571664604/math.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="841">
          <caret line="302" column="4" selection-start-line="302" selection-start-column="4" selection-end-line="302" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/.PyCharmCE2018.3/system/python_stubs/571664604/numpy/core/umath.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="203">
          <caret line="4532" column="4" selection-start-line="4532" selection-start-column="4" selection-end-line="4532" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_HOME_DIR$/helpers/pydev/_pydev_imps/_pydev_execfile.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="289">
          <caret line="17" column="57" lean-forward="true" selection-start-line="17" selection-start-column="57" selection-end-line="17" selection-end-column="57" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/numpy/lib/twodim_base.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="203">
          <caret line="85" column="10" selection-start-line="85" selection-start-column="4" selection-end-line="85" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/deep-learning-assignment/plotGauss.py" />
    <entry file="file://$PROJECT_DIR$/deep-learning-assignment/rotation_of_bivariate_gaussian.py" />
    <entry file="file://$PROJECT_DIR$/neural-network/NN_2_hidden_layer.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="136">
          <caret line="10" column="35" selection-start-line="10" selection-start-column="35" selection-end-line="10" selection-end-column="35" />
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/neural-network/NN_4_hidden_layer.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1955">
          <caret line="117" column="24" selection-start-line="117" selection-start-column="24" selection-end-line="117" selection-end-column="24" />
          <folding>
            <element signature="e#0#18#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/pandas/core/frame.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4828">
          <caret line="377" column="8" selection-start-line="377" selection-start-column="8" selection-end-line="377" selection-end-column="8" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/neural-network/cnn_lenet5.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="663">
          <caret line="75" column="6" selection-start-line="75" selection-start-column="6" selection-end-line="75" selection-end-column="6" />
          <folding>
            <element signature="e#0#23#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/tensorflow/python/keras/layers/core.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="197">
          <caret line="120" column="6" selection-start-line="120" selection-start-column="6" selection-end-line="120" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/neural-network/cnn_lenet5_with_dropout.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="212">
          <caret line="54" selection-start-line="54" selection-end-line="54" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/neural-network/cnn_AlexNet.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-269">
          <caret line="20" column="7" selection-start-line="20" selection-end-line="20" selection-end-column="7" />
          <folding>
            <element signature="e#0#23#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/tensorflow/python/keras/layers/pooling.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="206">
          <caret line="351" column="6" selection-start-line="351" selection-start-column="6" selection-end-line="351" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/Miniconda2/envs/pattern-recognition-basic/Lib/site-packages/tensorflow/python/keras/layers/convolutional.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="140">
          <caret line="438" column="6" selection-start-line="438" selection-start-column="6" selection-end-line="438" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/neural-network/temp.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="365">
          <caret line="56" lean-forward="true" selection-start-line="56" selection-end-line="56" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/neural-network/VGG_inspired_34.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="288">
          <caret line="67" column="22" lean-forward="true" selection-start-line="67" selection-start-column="22" selection-end-line="67" selection-end-column="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/neural-network/VGG19.py">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="272">
          <caret line="16" column="88" lean-forward="true" selection-start-line="16" selection-start-column="88" selection-end-line="16" selection-end-column="88" />
        </state>
      </provider>
    </entry>
  </component>
</project>